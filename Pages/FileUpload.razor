@page "/FileUpload"
@using System.IO
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Logging
@using playlistimport_blazor.Data
@using playlistimport_blazor.Utilities
@inject ILogger<FileUpload> _logger
@inject IWebHostEnvironment _environment
@inject TableDataService _tableDataService
@inject NavigationManager _navigationManager

<h3>Upload Files</h3>

<p>
    <label>
        Upload file:
        <InputFile OnChange="@LoadFiles" />
    </label>
</p>

@if (_isLoading)
{
    <p>Uploading and showing results...</p>
}

@code {
    private long maxFileSize = 1024 * 1000;
    private bool _isLoading;

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        _isLoading = true;
        
        try
        {
            var trustedFileNameForFileStorage = Path.GetRandomFileName();
            var path = Path.Combine(_environment.ContentRootPath,
                    _environment.EnvironmentName, "unsafe_uploads",
                    trustedFileNameForFileStorage);

            await using FileStream fs = new(path, FileMode.Create);
            await e.File.OpenReadStream(maxFileSize).CopyToAsync(fs);
            await fs.FlushAsync();
            await fs.DisposeAsync();
            var songs = await CsvRead.ReadRecordsAsync(path, new SongMap());
            await TableDataService.SetSongsAsync(songs);
        }
        catch (Exception ex)
        {
            _logger.LogError("File: {Filename} Error: {Error}", 
                e.File.Name, ex.Message);
        }
        
        _isLoading = false;
        GotoDataPage();
    }

    private void GotoDataPage()
    {
        _navigationManager.NavigateTo("fetchdata");
    }
}